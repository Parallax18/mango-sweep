import { useRef, useState } from 'react';
import Head from 'next/head'
// import Image from 'next/image'
import Link from 'next/link'
import { Box, Flex, Stack, FormControl, FormLabel, Heading, Text, Input, VStack, HStack, Checkbox, Button, Modal, useDisclosure} from '@chakra-ui/react'
import { useAuth } from '../contexts/AuthContext';
import ModalComponent from '../components/modal';
import NavBar from '../components/Nav';
// const Illustration = require("/user-research-animate.svg")
// const Logo = require("/mango-log.png")

export default function Signup() {
  const { signUp } = useAuth()
  const data = useAuth()
  const firstnameref = useRef()
  const lastnameref = useRef()
  const phoneref = useRef()
  const emailref = useRef()
  const passwordref = useRef()
  const [isLoading, setIsLoading] = useState(false)

  const { isOpen, onOpen, onClose } = useDisclosure()
  const [modalContent, setModalContent] = useState("")

  const handleSubmit = async (e) => {
    try {
      // set loading to true
        setIsLoading(true)
        e.preventDefault()
        console.log("data ", firstnameref.current.value, lastnameref.current.value, phoneref.current.value, emailref.current.value, passwordref.current.value)
        const firstName = firstnameref.current.value
        const lastName = lastnameref.current.value
        const email = emailref.current.value
        const phoneNumber = phoneref.current.value
        const password = passwordref.current.value
        await signUp({firstName, lastName, phoneNumber, email, password})

        setModalContent(`${firstnameref.current.value} sign up success!`)
      
        // firstnameref.current.value = ""
        // emailref.current.value =""
        // passwordref.current.value =""
        // alert(`signed up as ${firstnameref.current.value}`)
        onOpen(true)
        setTimeout(() => {
          onClose(true)
          firstnameref.current.value = ""
          lastnameref.current.value = ""
          emailref.current.value = ""
          phoneref.current.value = ""
          passwordref.current.value = ""
        }, 3000);
       
        // router.push("/dashboard")
        // navigate to dashboard
      } catch (error) {
        console.log("error",  error)
        onOpen(true)
        setModalContent(`Sign up was not successfull`)
        setTimeout(() => {
          onClose(true)
          firstnameref.current.value = ""
          lastnameref.current.value = ""
          emailref.current.value = ""
          phoneref.current.value = ""
          passwordref.current.value = ""
        }, 3000);
        // alert(error.message)
      }
      finally{
        // set loading to false
        setIsLoading(false)
      }
  } 


  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {/* <NavBar /> */}
        <Flex w="full"  alignItems={'center'}>
          <Box display={['none','block']} className="w-1/2 h-full" >
              <img src={"/user-research-animate.svg"}  className="h-full w-full" alt="illustration"/>
           
            {/* <Box padding={'5rem'} position={'absolute'} bottom={0} zIndex={200}>
              <Text  color={"black"} className="text-xl">
                Building exceptional services with Back Office Support and Business Perfomance
              </Text>
            </Box> */}
          </Box>
          <Box padding={[3, 10]} className="w-full md:w-1/2">
            <Box mb={10}>
              <Stack  alignItems={"start"}>
                <img src={"/mango-log.png"} width={100} height={50} objectFit="contain" className='m-0' alt='img'/>
                <Text fontWeight={"bold"} margin={0}>Mango Sweep</Text>
              </Stack>
              {/* <Heading fontSize={20}>Create Account</Heading> */}
              <Text color={'#82869A'}>Build an exceptional business</Text>
            </Box>
            <form className='w-full' onSubmit={(e) => handleSubmit(e)}>
              <VStack spacing={9}>
                <HStack spacing={5} w="full">
                  <FormControl>
                    <FormLabel htmlFor='firstname' color={'#82869A'} fontSize={13}>First Name</FormLabel>
                    <Input name='firstname' ref={firstnameref} id='firstname' type='text' variant="flushed" placeholder='Enter your first name' _placeholder={{ fontsize: '3' }}/>
                  </FormControl>
                  <FormControl>
                    <FormLabel htmlFor='lastname' color={'#82869A'} fontSize={13}>Last Name</FormLabel>
                    <Input name="lastname" ref={lastnameref} id='lastname' type='text' variant="flushed" placeholder='Enter your last name'/>
                  </FormControl>
                </HStack>
                <FormControl>
                  <FormLabel htmlFor='phonenumber' color={'#82869A'} fontSize={13}>Phone Number</FormLabel>
                  <Input name="phone" ref={phoneref} id='phonenumber' type='phone' variant="flushed" placeholder='Enter your phone number'/>
                </FormControl>
                <FormControl>
                  <FormLabel htmlFor='email' color={'#82869A'} fontSize={13}>Email Address</FormLabel>
                  <Input name="email" ref={emailref} id='email' type='email' variant="flushed" placeholder='Enter your email'/>
                </FormControl>
                <FormControl>
                  <FormLabel htmlFor='password' color={'#82869A'} fontSize={13}>Password</FormLabel>
                  <Input name='password' ref={passwordref} id='password' type='password' variant="flushed" placeholder='Enter your password'/>
                </FormControl>

                {/* <Flex justifyContent={'space-between'} w="full">
                  <Checkbox color={'#82869A'} fontSize={15}>Remember me</Checkbox>

                  <Link href='/' className="text-red-900" fontSize={13}>By clicking you agree to our terms of service</Link>
                </Flex> */}

                {/* <Link href='/dashboard'> */}
                  <Button
                    isLoading={isLoading}
                    
                    loadingText='Signing you in'
                    colorScheme='blue'
                    variant='solid'
                    w={'full'}
                    dropShadow={true}
                    paddingY={7}
                    type="submit"
                  >
                    Sign up
                  </Button>
                {/* </Link> */}

                <HStack spacing={3}>
                  <Text color={'#82869A'} fontSize={15}>Got an Account?</Text>

                  <Link href='/login' className="text-red-900" >Log In</Link>
                </HStack>

              </VStack>
            </form>
          </Box>

          <ModalComponent isOpen={isOpen} body={modalContent}/>
        </Flex>
      </main>
    </div>
  )
}
